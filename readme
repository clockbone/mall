1、启动mysql服务，以管理员身份运行cmd
  键入：net start mysql

2、 <authentication-manager>
          <!--权限控制类，权限校验通过 给用户添加相应权限-->
          <!--此校验拦截的是 login-page="/user/login" 请正确理解！！！-->
          <authentication-provider user-service-ref='userDetailsService' />
    </authentication-manager>

3、 spring security对用户名和密码的校验过程
    AuthenticationManager调用Provider，provider调用userDetaisService来根据username获取真实的数据库信息。
    而在usernamePasswordAuthenticationFilter中来调用的是AuthenticationManager

４、用户密码是如何匹配的
   在userDetailsService　类中可获取用户名，根据用户拿到密码后，封装到Ｕｓｅｒ对象中，框架会自动匹配密码

5、此项目中写入cookie的domain设置的test.clock.com,，所以需要在host文件中添加 127.0.0.1 test.clock.com的映射，
   访问test.clock.com:8080才可以看到cookie生效

6、分支feature/feature-mall-hibernate  添加了spring4零配置 jpa 作为持久层
   jpa注入方式 不是以xml配置文件方式注入的，是通过 configuration包下的 JpaSourceConfig类注入的
   一个简单的说明：
        spring4中提供了大量的注解来支持零配置，简要说明如下：
        @Configuration ： 类似于spring配置文件，负责注册bean，对应的提供了@Bean注解。需要org.springframework.web.context.support.AnnotationConfigWebApplicationContext注册到容器中。
        @ComponentScan ： 注解类查找规则定义 <context:component-scan/>
        @EnableAspectJAutoProxy ： 激活Aspect自动代理 <aop:aspectj-autoproxy/>
        @Import @ImportResource: 关联其它spring配置  <import resource="" />
        @EnableCaching ：启用缓存注解  <cache:annotation-driven/>
        @EnableTransactionManagement ： 启用注解式事务管理 <tx:annotation-driven />
        @EnableWebMvcSecurity ： 启用springSecurity安全验证

7、feature/feature-test-session测试session超时时间配置