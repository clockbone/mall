<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:beans="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task  
		http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 自动装配包中的类，过滤掉带有@Controller注解的类 -->
	<context:component-scan base-package="com.clockbone,com.clockpone">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>



    <util:properties id="app" location="classpath:/app.properties"/>
	
	<!-- 配置自动扫描方法 ，并每隔多长时间执行这个方法-->
   <!-- <import resource="spring-security.xml"></import>-->
    <import resource="mybatis-sec.xml"/>
    <import resource="mybatis.xml"/>

	<task:annotation-driven/>


    <!-- 配置数据库注解aop -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <bean id="manyDataSourceAspect" class="com.clockbone.filter.DataSourceAspect" />
    <aop:config>
        <aop:aspect id="c" ref="manyDataSourceAspect">
            <!--dynamicdao包下的所有类，所有方法，任意参数类型、个数，任意返回值-->
            <aop:pointcut id="tx" expression="execution(* com.clockpone.dynamicdao.*.*(..))"/>
            <aop:before pointcut-ref="tx" method="before"/>
        </aop:aspect>
    </aop:config>

    <!--另一种方式的数据源选择 拦截器配置-->
    <!--配置拦截器  dataSourceMain  dataSourceBack-->
    <bean id="dynamicDsInterceptor_galaxy" class="com.clockbone.interceptor.DynamicDataSourceInterceptor">
        <property name="attributeSource">
            <list>
                <value>query*,dataSourceBack</value>
                <value>count*,dataSourceBack</value>
                <value>find*,dataSourceBack</value>
                <value>get*,dataSourceBack</value>
                <value>list*,dataSourceBack</value>
                <value>*,dataSourceMain</value>
            </list>
        </property>
    </bean>
    <aop:config>

        <!--切入点:设置service下的所有类，所有方法，public 所有类型返回值 -->
        <aop:pointcut id="loginPoint"
                      expression="execution(public * com.clockbone.service.impl.*.*(..)) "/>
        <!--在该切入点使用自定义拦截器-->
        <aop:advisor pointcut-ref="loginPoint" advice-ref="dynamicDsInterceptor_galaxy"/>


    </aop:config>


</beans>