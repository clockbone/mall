<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
         ">

    <!-- ========================= DATASOURCE DEFINITION ========================= -->

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    <context:property-placeholder location="classpath:/data-access.properties"/>

    <!-- DataSource configuration for Apache Commons DBCP. -->
    <!--  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
           p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
           p:username="${jdbc.username}" p:password="${jdbc.password}"/> -->

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"></property>
        <property name="jdbcUrl"
                  value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>

        <!--c3p0 -->
        <property name="initialPoolSize" value="3" />
        <!-- 初始化时创建的连接数 Default: 3 -->
        <property name="minPoolSize" value="2" />
        <!--连接池中保留的最小连接数。Default: 3 -->
        <property name="maxPoolSize" value="50" />
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxIdleTime" value="600" />
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="acquireIncrement" value="3" />
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireRetryAttempts" value="30" />
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="breakAfterAcquireFailure" value="false" />
        <!--true那么在尝试获取连接失败后该数据源将申明已断开并永久关闭 ,false，获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常
            但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。 -->
        <property name="maxStatements" value="0" />
        <!-- 如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。100 Default:
            0 -->
        <property name="maxStatementsPerConnection" value="15" />
        <!-- 单个连接所拥有的最大缓存statements数 -->
        <property name="testConnectionOnCheckout" value="false" />
        <!-- 如果设为true那么在每个connection提交的时候都 将校验其有效性 -->
        <property name="testConnectionOnCheckin" value="false" />
        <!-- 取得连接的同时将校验连接的有效性 -->
        <property name="idleConnectionTestPeriod" value="3600" />
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="numHelperThreads" value="5" />
        <!--c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能 -->
        <property name="debugUnreturnedConnectionStackTraces" value="true"></property>
        <property name="unreturnedConnectionTimeout" value="120"></property>

    </bean>



</beans>